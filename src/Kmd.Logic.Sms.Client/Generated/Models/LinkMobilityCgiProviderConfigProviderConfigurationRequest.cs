// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Kmd.Logic.Sms.Client.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    public partial class LinkMobilityCgiProviderConfigProviderConfigurationRequest
    {
        /// <summary>
        /// Initializes a new instance of the
        /// LinkMobilityCgiProviderConfigProviderConfigurationRequest class.
        /// </summary>
        public LinkMobilityCgiProviderConfigProviderConfigurationRequest()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// LinkMobilityCgiProviderConfigProviderConfigurationRequest class.
        /// </summary>
        /// <param name="displayName">A custom name that can be used to later
        /// understand the purpose of
        /// this provider configuration.</param>
        /// <param name="configuration">The provider-specific
        /// configuration.</param>
        /// <param name="sendTestSms">The details used to send a test SMS with
        /// the proposed provider
        /// configuration. We will use these details to send a real SMS to
        /// the provider, in order to verify the configuration values are valid
        /// and read for use.</param>
        public LinkMobilityCgiProviderConfigProviderConfigurationRequest(string displayName, LinkMobilityCgiProviderConfig configuration, SendTestSmsRequest sendTestSms)
        {
            DisplayName = displayName;
            Configuration = configuration;
            SendTestSms = sendTestSms;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets a custom name that can be used to later understand the
        /// purpose of
        /// this provider configuration.
        /// </summary>
        [JsonProperty(PropertyName = "displayName")]
        public string DisplayName { get; set; }

        /// <summary>
        /// Gets or sets the provider-specific configuration.
        /// </summary>
        [JsonProperty(PropertyName = "configuration")]
        public LinkMobilityCgiProviderConfig Configuration { get; set; }

        /// <summary>
        /// Gets or sets the details used to send a test SMS with the proposed
        /// provider
        /// configuration. We will use these details to send a real SMS to
        /// the provider, in order to verify the configuration values are valid
        /// and read for use.
        /// </summary>
        [JsonProperty(PropertyName = "sendTestSms")]
        public SendTestSmsRequest SendTestSms { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (DisplayName == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "DisplayName");
            }
            if (Configuration == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Configuration");
            }
            if (SendTestSms == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "SendTestSms");
            }
            if (Configuration != null)
            {
                Configuration.Validate();
            }
            if (SendTestSms != null)
            {
                SendTestSms.Validate();
            }
        }
    }
}
